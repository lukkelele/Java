/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ItemLendingSystem;

import org.junit.Test;

import ItemLendingSystem.Model.Member;
import ItemLendingSystem.Model.BankAccount;
import ItemLendingSystem.Model.Bank;


public class AppTest {
   
    /* Check to see if the ID length is 6 */
    @Test
    public void checkIdLength() {
        Member member = new Member("Lukas", "Gunnarsson", "0707123123", "lukas@gmail.com");
        assert (member.getId().length() == 6);
    }

    @Test
    /* Withdrawal should be 0 because the balance is overdrawn 
     * This is done via the Member class
     */
    public void negativeBankBalance_throughMember() {
        Member member = new Member("Lukas", "Gunnarsson", "0707123123", "lukas@gmail.com");
        BankAccount bankAcc = member.getBankAccount();
        bankAcc.addFunds(450);
        System.out.println("==> Current balance: "+member.getBalance());
        int withdrawal = bankAcc.removeFunds(1000);
        assert (withdrawal == 0);
    }

    @Test
    /* Withdrawal should be 0 because the balance is overdrawn
     * This is done via the Bank class
     */
    public void negativeBankBalance_throughBank() {
        Member member = new Member("Lukas", "Gunnarsson", "0707123123", "lukas@gmail.com");
        Bank bank = new Bank();
        bank.deposit(member, 450); // Add 450 credits
        System.out.println("==> Current balance: "+member.getBalance());
        int withdrawal = bank.withdraw(member, 1000);
        assert (withdrawal == 0);
    }

    @Test
    public void uniqueIDs_100members() {
        boolean flag = true;
        String[] ids = new String[100];
        for (int i=0 ; i < 100 ; i++) {
            Member member = new Member("", "", "", "");
            ids[i] = member.getId();
        }
        for (int k=0 ; k < ids.length ; k++) {
            for (int j=k+1 ; j < ids.length ; j++) {
                if (ids[k].equals(ids[j])) {
                    // Iterate through all ids and compare each one
                    flag = false;
                }
            }
        }
        assert (flag == true);
    }


}

